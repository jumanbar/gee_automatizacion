# =============== CRONTAB PARA USUARIO jbarreneche ===============

# Variables

http_proxy="http://172.20.2.9:8080/"
https_proxy="http://172.20.2.9:8080/"
PYTHONPATH="/home/jbarreneche/modules"

# Commands
56 0 * * * echo "" > log.log
00 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 1 >> log.log
04 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 2 >> log.log
08 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 3 >> log.log
12 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 4 >> log.log
16 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 5 >> log.log
20 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 6 >> log.log
24 1,2,3,4,5,6 * * * /bin/bash run_gee.sh 7 >> log.log
30 6 * * * /bin/bash rename_log.sh

# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command



# =============== CRONTAB PARA USUARIO root ===============
# Antes:
# $ sudo su
# # crontab -e

31 6 * * * mv -f /home/jbarreneche/gee_7zonas/output/*.csv /mnt/datos_irn/automatizado/
