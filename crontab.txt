# Variables

http_proxy="http://172.20.2.9:8080/"
https_proxy="http://172.20.2.9:8080/"
PYTHONPATH="/home/jbarreneche/modules"

# Inicio de logs:
56 0 * * * echo "" > log.log > log60.log

# 60 Zonas
40 1,3,5 * * * /bin/bash run_gee60.sh >> log60.log

# 7 Zonas
00 1,2,3,4,5,6 * * * /bin/bash run_gee.sh >> log.log

# Renombrar los logs globales del dia:
30 6 * * * /bin/bash rename_log.sh

# INSERTs:
10 7 * * * ./insertdb.sh
15 7 * * * ./insertdb60.sh

# Limpieza:
55 23 * * * rm gee_*zonas/output/zona*csv
56 23 * * * ./delete_old_logs.sh gee_7zonas
57 23 * * * ./delete_old_logs.sh gee_60zonas


# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

